{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\AffzPedro\\\\Documents\\\\NLW\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Index\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.episodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n} //SSG (versão estatica da pagina)\n//console.log(props.episodes)\n//SPA\n\n/*useEffect(() => {\r\n  fetch('http://localhost:3333/episodes')\r\n    .then((response) => response.json())\r\n    .then(data => console.log(data))\r\n}, []) */\n//SSR (atualiza sempre que alguem acessar)\n\n/*export async function getServerSideProps() {\r\n  const response = await fetch('http://localhost:3333/episodes')\r\n  const data = await response.json()\r\n\r\n  return {\r\n    props: {\r\n      episodes: data,\r\n    }\r\n  }\r\n}*/\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/AffzPedro/Documents/NLW/podcastrnext/src/pages/index.tsx"],"names":["Home","props","JSON","stringify","episodes"],"mappings":";;;AAcA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;AAaE;AAEA;;AACF;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAzCwBJ,I","sourcesContent":["//SSG\r\nimport { GetStaticProps } from 'next'\r\n\r\ntype Episode = {\r\n  id: string;\r\n  title: string;\r\n  members: string;\r\n}\r\n\r\n\r\ntype HomeProps = {\r\n  episodes: Episode[];\r\n}\r\n\r\nexport default function Home(props: HomeProps) {\r\n  return (\r\n    <div>\r\n      <h1>Index</h1>\r\n      <p>{JSON.stringify(props.episodes)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n//SSG (versão estatica da pagina)\r\nexport const getStaticProps: GetStaticProps = async () => {\r\n  const response = await fetch('http://localhost:3333/episodes')\r\n  const data = await response.json()\r\n\r\n  return {\r\n    props: {\r\n      episodes: data,\r\n    },\r\n    revalidate: 60 * 60 * 8,\r\n  }\r\n}\r\n\r\n  //console.log(props.episodes)\r\n\r\n  //SPA\r\n/*useEffect(() => {\r\n  fetch('http://localhost:3333/episodes')\r\n    .then((response) => response.json())\r\n    .then(data => console.log(data))\r\n}, []) */\r\n\r\n//SSR (atualiza sempre que alguem acessar)\r\n/*export async function getServerSideProps() {\r\n  const response = await fetch('http://localhost:3333/episodes')\r\n  const data = await response.json()\r\n\r\n  return {\r\n    props: {\r\n      episodes: data,\r\n    }\r\n  }\r\n}*/"]},"metadata":{},"sourceType":"module"}